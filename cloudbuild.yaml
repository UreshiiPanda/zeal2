
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/angular-app', './hayden_app_frontend']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/angular-app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/html-css-js-app1', './ian_app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/html-css-js-app1']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/html-css-js-app2', './jacob_app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/html-css-js-app2']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/node-backend', './hayden_app_backend']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/node-backend']
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'combined_k8s.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=zeal-intern-cluster'

  # make sure that Kubernetes updates each pod
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['rollout', 'restart', 'deployment/angular-app']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=zeal-intern-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['rollout', 'restart', 'deployment/html-css-js-app1']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=zeal-intern-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['rollout', 'restart', 'deployment/html-css-js-app2']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=zeal-intern-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['rollout', 'restart', 'deployment/node-backend']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=zeal-intern-cluster'

